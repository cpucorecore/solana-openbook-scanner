// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package openbook_v2

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// Withdraw any available tokens.
type SettleFunds struct {

	// [0] = [WRITE, SIGNER] owner
	//
	// [1] = [WRITE, SIGNER] penaltyPayer
	//
	// [2] = [WRITE] openOrdersAccount
	//
	// [3] = [WRITE] market
	//
	// [4] = [] marketAuthority
	//
	// [5] = [WRITE] marketBaseVault
	//
	// [6] = [WRITE] marketQuoteVault
	//
	// [7] = [WRITE] userBaseAccount
	//
	// [8] = [WRITE] userQuoteAccount
	//
	// [9] = [WRITE] referrerAccount
	//
	// [10] = [] tokenProgram
	//
	// [11] = [] systemProgram
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewSettleFundsInstructionBuilder creates a new `SettleFunds` instruction builder.
func NewSettleFundsInstructionBuilder() *SettleFunds {
	nd := &SettleFunds{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 12),
	}
	return nd
}

// SetOwnerAccount sets the "owner" account.
func (inst *SettleFunds) SetOwnerAccount(owner ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(owner).WRITE().SIGNER()
	return inst
}

// GetOwnerAccount gets the "owner" account.
func (inst *SettleFunds) GetOwnerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetPenaltyPayerAccount sets the "penaltyPayer" account.
func (inst *SettleFunds) SetPenaltyPayerAccount(penaltyPayer ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(penaltyPayer).WRITE().SIGNER()
	return inst
}

// GetPenaltyPayerAccount gets the "penaltyPayer" account.
func (inst *SettleFunds) GetPenaltyPayerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetOpenOrdersAccountAccount sets the "openOrdersAccount" account.
func (inst *SettleFunds) SetOpenOrdersAccountAccount(openOrdersAccount ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(openOrdersAccount).WRITE()
	return inst
}

// GetOpenOrdersAccountAccount gets the "openOrdersAccount" account.
func (inst *SettleFunds) GetOpenOrdersAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetMarketAccount sets the "market" account.
func (inst *SettleFunds) SetMarketAccount(market ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(market).WRITE()
	return inst
}

// GetMarketAccount gets the "market" account.
func (inst *SettleFunds) GetMarketAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetMarketAuthorityAccount sets the "marketAuthority" account.
func (inst *SettleFunds) SetMarketAuthorityAccount(marketAuthority ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(marketAuthority)
	return inst
}

// GetMarketAuthorityAccount gets the "marketAuthority" account.
func (inst *SettleFunds) GetMarketAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetMarketBaseVaultAccount sets the "marketBaseVault" account.
func (inst *SettleFunds) SetMarketBaseVaultAccount(marketBaseVault ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(marketBaseVault).WRITE()
	return inst
}

// GetMarketBaseVaultAccount gets the "marketBaseVault" account.
func (inst *SettleFunds) GetMarketBaseVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetMarketQuoteVaultAccount sets the "marketQuoteVault" account.
func (inst *SettleFunds) SetMarketQuoteVaultAccount(marketQuoteVault ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(marketQuoteVault).WRITE()
	return inst
}

// GetMarketQuoteVaultAccount gets the "marketQuoteVault" account.
func (inst *SettleFunds) GetMarketQuoteVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetUserBaseAccountAccount sets the "userBaseAccount" account.
func (inst *SettleFunds) SetUserBaseAccountAccount(userBaseAccount ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(userBaseAccount).WRITE()
	return inst
}

// GetUserBaseAccountAccount gets the "userBaseAccount" account.
func (inst *SettleFunds) GetUserBaseAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetUserQuoteAccountAccount sets the "userQuoteAccount" account.
func (inst *SettleFunds) SetUserQuoteAccountAccount(userQuoteAccount ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(userQuoteAccount).WRITE()
	return inst
}

// GetUserQuoteAccountAccount gets the "userQuoteAccount" account.
func (inst *SettleFunds) GetUserQuoteAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetReferrerAccountAccount sets the "referrerAccount" account.
func (inst *SettleFunds) SetReferrerAccountAccount(referrerAccount ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(referrerAccount).WRITE()
	return inst
}

// GetReferrerAccountAccount gets the "referrerAccount" account.
func (inst *SettleFunds) GetReferrerAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

// SetTokenProgramAccount sets the "tokenProgram" account.
func (inst *SettleFunds) SetTokenProgramAccount(tokenProgram ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[10] = ag_solanago.Meta(tokenProgram)
	return inst
}

// GetTokenProgramAccount gets the "tokenProgram" account.
func (inst *SettleFunds) GetTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(10)
}

// SetSystemProgramAccount sets the "systemProgram" account.
func (inst *SettleFunds) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *SettleFunds {
	inst.AccountMetaSlice[11] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "systemProgram" account.
func (inst *SettleFunds) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(11)
}

func (inst SettleFunds) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_SettleFunds,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst SettleFunds) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *SettleFunds) Validate() error {
	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Owner is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.PenaltyPayer is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.OpenOrdersAccount is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.Market is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.MarketAuthority is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.MarketBaseVault is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.MarketQuoteVault is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.UserBaseAccount is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.UserQuoteAccount is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.ReferrerAccount is not set")
		}
		if inst.AccountMetaSlice[10] == nil {
			return errors.New("accounts.TokenProgram is not set")
		}
		if inst.AccountMetaSlice[11] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
	}
	return nil
}

func (inst *SettleFunds) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("SettleFunds")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=12]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("           owner", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("    penaltyPayer", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("      openOrders", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("          market", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta(" marketAuthority", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta(" marketBaseVault", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("marketQuoteVault", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("        userBase", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("       userQuote", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("        referrer", inst.AccountMetaSlice.Get(9)))
						accountsBranch.Child(ag_format.Meta("    tokenProgram", inst.AccountMetaSlice.Get(10)))
						accountsBranch.Child(ag_format.Meta("   systemProgram", inst.AccountMetaSlice.Get(11)))
					})
				})
		})
}

func (obj SettleFunds) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *SettleFunds) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewSettleFundsInstruction declares a new SettleFunds instruction with the provided parameters and accounts.
func NewSettleFundsInstruction(
	// Accounts:
	owner ag_solanago.PublicKey,
	penaltyPayer ag_solanago.PublicKey,
	openOrdersAccount ag_solanago.PublicKey,
	market ag_solanago.PublicKey,
	marketAuthority ag_solanago.PublicKey,
	marketBaseVault ag_solanago.PublicKey,
	marketQuoteVault ag_solanago.PublicKey,
	userBaseAccount ag_solanago.PublicKey,
	userQuoteAccount ag_solanago.PublicKey,
	referrerAccount ag_solanago.PublicKey,
	tokenProgram ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey) *SettleFunds {
	return NewSettleFundsInstructionBuilder().
		SetOwnerAccount(owner).
		SetPenaltyPayerAccount(penaltyPayer).
		SetOpenOrdersAccountAccount(openOrdersAccount).
		SetMarketAccount(market).
		SetMarketAuthorityAccount(marketAuthority).
		SetMarketBaseVaultAccount(marketBaseVault).
		SetMarketQuoteVaultAccount(marketQuoteVault).
		SetUserBaseAccountAccount(userBaseAccount).
		SetUserQuoteAccountAccount(userQuoteAccount).
		SetReferrerAccountAccount(referrerAccount).
		SetTokenProgramAccount(tokenProgram).
		SetSystemProgramAccount(systemProgram)
}
